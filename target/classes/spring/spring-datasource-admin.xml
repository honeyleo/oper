<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
       http://www.springframework.org/schema/context     
       http://www.springframework.org/schema/context/spring-context-3.2.xsd    
       http://www.springframework.org/schema/tx     
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd    
       http://www.springframework.org/schema/aop     
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<context:component-scan base-package="cn.oper" />
	<!-- 使用默认的扫描方式 -->
	<context:property-placeholder location="classpath:conf/jdbc.properties" ignore-unresolvable="true" />
<!-- 	<context:property-placeholder location="classpath:conf/jdbc-production.properties" ignore-unresolvable="true" /> -->

    <bean id="stat-filter-admin" class="com.alibaba.druid.filter.stat.StatFilter">
        <!--慢SQL统计，如果SQL执行时间超过一定时间则记录为慢SQL  -->
        <property name="slowSqlMillis" value="3000" />
        <!--慢SQL统计日志输出  -->
        <property name="logSlowSql" value="true" />
        <!--合并SQL统计 例如select * from table t where t.id =1，会被变为select * from table t where t.id =？来统计  -->
        <property name="mergeSql" value="true" />
    </bean>	
	
	<!-- 配置数据源 -->
 	<bean id="dataSource-admin" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> 
        <property name="url" value="${payAdminUrl}" />
        <property name="username" value="${payAdminUsername}" />
        <property name="password" value="${payAdminPassword}" />
        
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="2"/>
        <property name="minIdle" value="2"/>
        <property name="maxActive" value="5"/>
        
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        
        <property name="validationQuery" value="SELECT 'x' FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        
        <!-- 关闭长时间不使用的连接 -->
        <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1200" /> <!-- 1200秒，也就是20分钟 -->
        <property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
        
        <!-- 配置监控统计拦截的filters -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter-admin" />
            </list>
        </property>
        <!-- 数据库监控，及日志配置 -->
        <property name="filters" value="logback" />
<!--         <property name="filters" value="stat,log4j" /> -->
        <!-- 合并统计多个数据源 -->
        <property name="useGloalDataSourceStat" value="true" />
    </bean>

	<!-- Spring和Jdbc的关联监控,通过方法名正则匹配拦截配置 -->
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>cn.oper.service.*</value>
				<value>cn.oper.dao.admin.*Dao.java</value>
			</list>
		</property>
	</bean>
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>

	<!-- myibatis配置，使其支持注解和配置文件形式 -->
	<bean id="sqlSessionFactory-admin" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource-admin" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config-admin.xml" />
<!-- 		<property name="mapperLocations" value="classpath:com/w/payadmin/dao/mapper/*mapper.xml" /> -->		
	</bean>
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-admin"/>
        <property name="basePackage" value="cn.oper.dao.admin" />
    </bean>

	<bean name="transactionManager-admin" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource-admin"></property>
	</bean>

	<!-- 事务相关控制 一 -->
	<!-- 使用spring全注解方式管理申明式事务 但数据表引擎必须为InnoDB -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	
	<!-- 事务相关控制 二 -->
<!-- 	<tx:advice id="userTxAdvice-admin" transaction-manager="transactionManager-admin"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="*" read-only="true" propagation="SUPPORTS" /> -->
<!-- 			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" /> -->
<!-- 			<tx:method name="del*" propagation="REQUIRED" rollback-for=" Exception" /> -->
<!-- 			<tx:method name="upd*" propagation="REQUIRED" rollback-for="Exception" /> -->
<!-- 			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
		
<!-- 	<aop:config proxy-target-class="true"> -->
<!-- 		<aop:pointcut id="pc" expression="execution(public * com.car.www.service..*.*(..))" /> -->
<!-- 		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice-admin" /> -->
<!-- 	</aop:config> -->
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>spring/biz/messages</value>
			</list>
		</property>
	</bean>
	
</beans>